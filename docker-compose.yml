version: '3.8'

networks:
  laravel:

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: nginx
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      # - redis
      - mysql
      # - mailhog
    networks:
      - laravel

  mysql:
    image: mysql:8.0.32
    container_name: mysql
    restart: unless-stopped
    volumes:
      - ./mysql:/var/lib/mysql
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: dockernginxlaravel
      MYSQL_USER: root
      MYSQL_PASSWORD: mridroot
      MYSQL_ROOT_PASSWORD: mridroot
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel
      
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - "8082:80"
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: mridroot
    networks:
      - laravel
      


  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ./src:/var/www/html:delegated
      - ./php/php.ini:/usr/local/etc/php/php.ini
    networks:
      - laravel

#  redis:
#    image: redis:alpine
#    container_name: ${PROJECT_NAME}-redis
#    restart: unless-stopped
#    ports:
#      - 6379:6379
#    volumes:
#      - './redis:/data'
#    networks:
#      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - laravel



  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - laravel

#  mailhog:
#    image: mailhog/mailhog:laravel
#    container_name: ${PROJECT_NAME}-mailhog
#    ports:
#      - 1025:1025
#      - 8025:8025
#    networks:
#      - laravel
      
#  pgsql:
#        image: postgres:15.1
#        ports:
#            - '5432:5432'
#        environment:
#            PGPASSWORD: '${DB_PASSWORD}'
#            POSTGRES_DB: '${DB_DATABASE}'
#            POSTGRES_USER: '${DB_USERNAME}'
#            POSTGRES_PASSWORD: '${DB_PASSWORD}'
#        volumes:
#            - './postgresql:/var/lib/postgresql/data'
#        networks:
#            - ${NETWORK_NAME}
#        healthcheck:
#          test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"] 





#  npm:
#    image: node:18.14.0
#    container_name: ${PROJECT_NAME}-npm
#    volumes:
#      - ./src:/var/www/html
#    working_dir: /var/www/html
#    entrypoint: ['npm']
#    networks:
#      - ${NETWORK_NAME}

