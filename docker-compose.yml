version: '3'

networks:
  ${NETWORK_NAME}:

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: ${PROJECT_NAME}-nginx
    ports:
      - 80:80
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - php
      # - redis
      - mysql
      # - pgsql
      # - mailhog
    networks:
      - ${NETWORK_NAME}

  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}-mysql
    restart: unless-stopped
    volumes:
      - ./mysql:/var/lib/mysql
    tty: true
    ports:
      - 3306:3306
    environment:
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USER}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - ${NETWORK_NAME}
      
#  pgsql:
#        image: postgres:13
#        ports:
#            - '5432:5432'
#        environment:
#            PGPASSWORD: '${DB_PASSWORD}'
#            POSTGRES_DB: '${DB_DATABASE}'
#            POSTGRES_USER: '${DB_USERNAME}'
#            POSTGRES_PASSWORD: '${DB_PASSWORD}'
#        volumes:
#            - './postgresql:/var/lib/postgresql/data'
#        networks:
#            - ${NETWORK_NAME}
#        healthcheck:
#          test: ["CMD", "pg_isready", "-q", "-d", "${DB_DATABASE}", "-U", "${DB_USERNAME}"] 

  php:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${PROJECT_NAME}-php
    volumes:
      - ./src:/var/www/html:delegated
    networks:
      - ${NETWORK_NAME}

#  redis:
#    image: redis:alpine
#    container_name: ${PROJECT_NAME}-redis
#    restart: unless-stopped
#    ports:
#      - 6379:6379
#	 volumes:
#      - './redis:/data'
#    networks:
#      - ${NETWORK_NAME}

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: ${PROJECT_NAME}-composer
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - php
    user: laravel
    entrypoint: ['composer', '--ignore-platform-reqs']
    networks:
      - ${NETWORK_NAME}

  npm:
    image: node:13.7
    container_name: ${PROJECT_NAME}-npm
    volumes:
      - ./src:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    networks:
      - ${NETWORK_NAME}

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${PROJECT_NAME}-artisan
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    working_dir: /var/www/html
    user: laravel
    entrypoint: ['php', '/var/www/html/artisan']
    networks:
      - ${NETWORK_NAME}

#  mailhog:
#    image: mailhog/mailhog:latest
#    container_name: ${PROJECT_NAME}-mailhog
#    ports:
#      - 1025:1025
#      - 8025:8025
#    networks:
#      - ${NETWORK_NAME}
